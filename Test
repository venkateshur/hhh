class TestCustomHTTPAdapter(unittest.TestCase):
    def test_cert_verify_valid_certs(self):
        # Mocking necessary objects for testing
        mock_conn = MagicMock()
        mock_url = "https://example.com"
        mock_verify = True
        mock_certs = [
            MagicMock(public_bytes="PublicBytes", private_key="PrivateKey"),
            MagicMock(),
        ]

        # Initialize the adapter
        adapter = CustomHTTPAdapter()

        # Call the method under test
        adapter.cert_verify(mock_conn, mock_url, mock_verify, mock_certs)

        # Assert that key_file is properly set
        self.assertEqual(mock_conn.key_file, "Key file created")

    def test_cert_verify_invalid_certs(self):
        # Mocking necessary objects for testing
        mock_conn = MagicMock()
        mock_url = "https://example.com"
        mock_verify = True
        mock_certs = None  # Invalid certs data

        # Initialize the adapter
        adapter = CustomHTTPAdapter()

        # Call the method under test
        adapter.cert_verify(mock_conn, mock_url, mock_verify, mock_certs)

        # Assert that key_file remains None
        self.assertIsNone(mock_conn.key_file)
